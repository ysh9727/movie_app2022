const 변수 = ReactDOM.createRoot(document.getElementById('~~~'))

변수.rander(
	컴포넌트 작성
)

컴포넌트의 props
	컴포넌트에서 컴포넌트로 전달하는 데이터를 의미한다.
	function(~~~){}의 느낌
	<컴포넌트명 fav="kimchi" />의 fav는 props의 이름(변수명?)을 뜻하고, kimchi는 값(value?)을 의미한다.
	props에 있는 데이터는 문자열인 경우를 제외하면 모두 {} 로 감싸줘야한다. boolean, number, array같은것들은 상관없음.
	컴포넌트 내에 적힌 값들은 객체로 저장되고, console.log로 확인이 가능하다. 출력은 JSX 내에서 {키값} 사용

state
	state값은 직접 변경하면 안되고, setState로 변경해줘야한다.
	state = { key:value }
	this.setState( key: ~~~ )

생명주기함수
	super 알아서 배우고 여기에 정리
	https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/super
	componentDidMount()		컴포넌트가 마운트된 직후(트리에 삽입된 직후)에 호출
	componentDidUpdate()	갱신이 된 직후에, 최초 렌더링에서는 호출되지 않음.
	componentWillUnmount() 컴포넌트가 마운트에서 해제되기직전에 호출

구조분해할당
	es6 객체접근방법, 꼭 알아두자.

async, await (https://ko.javascript.info/async-await)
	async function앞에 위치.
	async function () {} 혹은
	const a = async () => {}

	async가 붙은 함수는 항상 promise를 반환한다.
	
	await는 async함수 안에서만 동작한다.(일반 함수에서 사용하면 Syntax error.)
	await는 promise가 처리될때까지 기다린다.
	

react-router-DOM
	책은 v5를 쓰는것같다. 
	v6에서 route를 사용하려면 routes로 감싸줘야한다.
	HashRouter도 BrowserRouter로 바꿔주자. HashRouter는 검색엔진이 감지를 못한댄다.

route props
	https://velog.io/@peacesong/react-router-v6
	https://velog.io/@gyrbs22/React-React-router-dom-V6-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B4%80%EB%A0%A8-%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD
	https://ko.reactjs.org/docs/hooks-reference.html#usecontext
	라우팅 대상이 되는 컴포넌트에 넘겨주는 기본 props (책은 v5버전. v6에선 정상작동을 안하는듯하다.)

	Link to 로 넘겨주는방법은 v6에서 사용이 불가능하다.
	Link state= {{}}로 넘겨주자.

	hook은 class내에서 사용할수 없으므로 
	react의 useEffect를 사용하여 class의 componentDidMount, DidUpdate, WillUnmount대용으로 사용할수있다.



	react의 useContext 사용(useContext로 전달한 인자는 context 객체 그 자체이어야 함).
	react의 useEffect 사용(useNavigate는 useEffect안에서 사용해야만 한다).

	


	react-router-dom의 useLocation 

	https://developer.mozilla.org/ko/docs/Web/API/Window/localStorage
	https://velog.io/@gyrbs22/React-React-router-dom-V6-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EA%B4%80%EB%A0%A8-%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD

리다이렉트 기능
v5의 props내 history기능을 대신한다

	react-router-dom의 useNavigate(현재 페이지에서 특정 페이지로 이동시켜줌) 사용.
	useNavigate(N) // history.go(N)
	useNavigate(1) // history.goForward()
	useNavigate(-1) // history.goBack()
	useNavigate(2) // go 2 pages forward
	useNavigate(-2) // go 2 pages backward